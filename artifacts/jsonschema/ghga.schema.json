{
   "$defs": {
      "Agent": {
         "additionalProperties": false,
         "description": "An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity. Agents include a Person, Organization, or Software that performs an activity.",
         "properties": {
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "Description of an entity.",
               "type": "string"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "name": {
               "description": "The name for an entity.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "Agent",
         "type": "object"
      },
      "Analysis": {
         "additionalProperties": false,
         "description": "An Analysis is a data transformation that transforms input data to output data. The workflow used to achieve this transformation and the individual steps are also captured.",
         "properties": {
            "accession": {
               "description": "A unique GHGA identifier assigned to an entity for the sole purpose of referring to that entity in a global scope.",
               "type": "string"
            },
            "alias": {
               "description": "An alias uniquely identifying this Analysis entitiy.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "Describing how an Analysis was carried out. (e.g.: computational tools, settings, etc.).",
               "type": "string"
            },
            "ega_accession": {
               "description": "A unique European Genome-Phenome Archive (EGA) identifier assigned to an entity for the sole purpose of referring to that entity within the EGA federated network.",
               "type": "string"
            },
            "has_analysis_process": {
               "description": "One or more Analysis Process entities associated with this Analysis.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/AnalysisProcess"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_input": {
               "description": "The input data File entities used in the Analysis.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/File"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_output": {
               "description": "The output data File entities generated by this Analysis.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/File"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_study": {
               "description": "The Study entity associated with this Analysis.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/Study"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "has_workflow": {
               "description": "The Workflow entity associated with this Analysis.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/Workflow"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "reference_chromosome": {
               "description": "The reference chromosome used for this Analysis.",
               "type": "string"
            },
            "reference_genome": {
               "description": "A published genetic sequence that is used as a reference sequence against which other sequences are compared. Reference genome(s) or annotation(s) used for prior analyses (eg: GRCh38.p13).",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "title": {
               "description": "The title that describes an entity.",
               "type": "string"
            },
            "type": {
               "description": "The type of the Analysis. Either Reference Alignment (BAM) or Sequence Variation (VCF)",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id",
            "type",
            "reference_genome",
            "reference_chromosome",
            "has_input",
            "has_output",
            "alias"
         ],
         "title": "Analysis",
         "type": "object"
      },
      "AnalysisProcess": {
         "additionalProperties": false,
         "description": "An analysis process is a process that describes how one or more Files, from a Study, are transformed to another set of Files via a Workflow. The analysis process also keeps track of the workflow metadata and the Agent that is running the Analysis.",
         "properties": {
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "has_agent": {
               "description": "The Agent - a software, institution, or human - that is executing or responsible for executing the workflow.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/Agent"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "has_input": {
               "description": "The input data File entities used in the Analysis Process.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/File"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_output": {
               "description": "The output data File entities generated by the Analysis Process.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/File"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_workflow_step": {
               "description": "Workflow Step entity that performs a set of operations on the input data Files to generate a set of output data Files.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/WorkflowStep"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "title": {
               "description": "The title that describes an entity.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "AnalysisProcess",
         "type": "object"
      },
      "AnatomicalEntity": {
         "additionalProperties": false,
         "description": "Biological entity that is either an individual member of a biological species or constitutes the structural organization of an individual member of a biological species.",
         "properties": {
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "The description or definition of an ontology class.",
               "type": "string"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "name": {
               "description": "The name or label (rdfs:label) of an ontology class.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "AnatomicalEntity",
         "type": "object"
      },
      "Attribute": {
         "additionalProperties": false,
         "description": "A key/value pair that further characterizes an entity.",
         "properties": {
            "key": {
               "description": "The key for an attribute.",
               "type": "string"
            },
            "key_type": {
               "description": "A semantic type that characterizes the attribute key. Usually this is a term from an ontology. For example, 'MAXO:0000616' indicates that the attribute is a measurement of oxygen saturation in the blood.",
               "type": "string"
            },
            "value": {
               "description": "The value for an attribute. Usually this is a numerical value (without the units).",
               "type": "string"
            },
            "value_type": {
               "description": "The value type that characterizes the attribute value. Usually this is a term from an ontology that describes how to interpret the value. For example, 'SIO:001413' indicates that the value is to be interpreted as a percentage.",
               "type": "string"
            }
         },
         "required": [
            "key",
            "value"
         ],
         "title": "Attribute",
         "type": "object"
      },
      "BiologicalSexEnum": {
         "description": "The biological sex of an Individual as determined by their chromosomes.",
         "enum": [
            "Female",
            "Male",
            "Unknown"
         ],
         "title": "BiologicalSexEnum",
         "type": "string"
      },
      "Biospecimen": {
         "additionalProperties": false,
         "description": "A Biospecimen is any natural material taken from a biological entity (usually a human) for testing, diagnostics, treatment, or research purposes. The Biospecimen is linked to the Individual from which the Biospecimen is derived.",
         "properties": {
            "accession": {
               "description": "A unique GHGA identifier assigned to an entity for the sole purpose of referring to that entity in a global scope.",
               "type": "string"
            },
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "Description of an entity.",
               "type": "string"
            },
            "has_anatomical_entity": {
               "description": "The Anatomical entity, that represents the site, from which the Biospecimen was retrieved. Typically, a concept from Uber-anatomy Ontology (UBERON). For example, 'UBERON:0008307' indicates that the Biospecimen was extracted from the 'Heart Endothelium' of an Individual.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/AnatomicalEntity"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "has_disease": {
               "description": "The Disease entity that is associated with the Individual. Typically, a concept from Mondo Disease Ontology. For example, 'MONDO:0005267' indicates that the Individual suffers from 'Heart Disease'.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Disease"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_individual": {
               "description": "The Individual entity from which this Biospecimen was derived.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/Individual"
                  },
                  {
                     "$ref": "#/$defs/Donor"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "has_phenotypic_feature": {
               "description": "The Phenotypic Feature entity that is associated with the Individual. Typically, a concept from Human Phenotype Ontology. For example, 'HP:0100244' indicates that the Individual exhibits 'Fibrosarcoma' as one of its phenotype.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/PhenotypicFeature"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "isolation": {
               "description": "Method or device employed for collecting/isolating a biospecimen or a sample.",
               "type": "string"
            },
            "name": {
               "description": "The name for an entity.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "storage": {
               "description": "Methods by which a biospecimen or a sample is stored (e.g. frozen in liquid nitrogen).",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "Biospecimen",
         "type": "object"
      },
      "CaseControlEnum": {
         "description": "Enum to capture whether a Sample is to be considered as Case or Control.",
         "enum": [
            "control",
            "case"
         ],
         "title": "CaseControlEnum",
         "type": "string"
      },
      "CellLine": {
         "additionalProperties": false,
         "description": "A cultured cell population that represents a genetically stable and homogenous population of cultured cells that shares a common propagation history.",
         "properties": {
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "CellLine",
         "type": "object"
      },
      "Cohort": {
         "additionalProperties": false,
         "description": "A cohort is a collection of individuals that share a common characteristic/observation and have been grouped together for a research study/investigation.",
         "properties": {
            "accession": {
               "description": "A unique GHGA identifier assigned to an entity for the sole purpose of referring to that entity in a global scope.",
               "type": "string"
            },
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "has_member": {
               "description": "One or more Individuals that collectively define this Cohort.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Individual"
                     },
                     {
                        "$ref": "#/$defs/Donor"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "name": {
               "description": "The name for an entity.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "Cohort",
         "type": "object"
      },
      "DataAccessCommittee": {
         "additionalProperties": false,
         "description": "A group of members that are delegated to grant access to one or more datasets after ensuring the minimum criteria for data sharing has been met, and request for data use does not raise ethical and/or legal concerns.",
         "properties": {
            "accession": {
               "description": "A unique GHGA identifier assigned to an entity for the sole purpose of referring to that entity in a global scope.",
               "type": "string"
            },
            "alias": {
               "description": "The alias for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "A description for the Data Access Committee.",
               "type": "string"
            },
            "ega_accession": {
               "description": "A unique European Genome-Phenome Archive (EGA) identifier assigned to an entity for the sole purpose of referring to that entity within the EGA federated network.",
               "type": "string"
            },
            "has_member": {
               "description": "All the members that are part of this Data Access Committee.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Member"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "main_contact": {
               "description": "The main contact for the Data Access Committee.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/Member"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "name": {
               "description": "The name for the Data Access Committee.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id",
            "name",
            "main_contact",
            "alias"
         ],
         "title": "DataAccessCommittee",
         "type": "object"
      },
      "DataAccessPolicy": {
         "additionalProperties": false,
         "description": "A Data Access Policy specifies under which circumstances, legal or otherwise, a user can have access to one or more Datasets belonging to one or more Studies.",
         "properties": {
            "accession": {
               "description": "A unique GHGA identifier assigned to an entity for the sole purpose of referring to that entity in a global scope.",
               "type": "string"
            },
            "alias": {
               "description": "The alias for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "A short description for the Data Access Policy.",
               "type": "string"
            },
            "ega_accession": {
               "description": "A unique European Genome-Phenome Archive (EGA) identifier assigned to an entity for the sole purpose of referring to that entity within the EGA federated network.",
               "type": "string"
            },
            "has_data_access_committee": {
               "description": "The Data Access Committee linked to this policy.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/DataAccessCommittee"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "has_data_use_condition": {
               "description": "Data Use Condition entities that are associated with the Data Access Policy.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/DataUseCondition"
                     }
                  ]
               },
               "type": "array"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "name": {
               "description": "A name for the Data Access Policy.",
               "type": "string"
            },
            "policy_text": {
               "description": "The terms of data use and policy verbiage should be captured here.",
               "type": "string"
            },
            "policy_url": {
               "description": "URL for the policy, if available. This is useful if the terms of the policy is made available online at a resolvable URL.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id",
            "description",
            "policy_text",
            "has_data_access_committee",
            "alias"
         ],
         "title": "DataAccessPolicy",
         "type": "object"
      },
      "DataUseCondition": {
         "additionalProperties": false,
         "description": "Data Use Condition represents the use conditions associated with a Dataset. A permission field can have one or more terms that collectively defines the data use condition. The modifier determines the interpretation of the use permission(s).",
         "properties": {
            "modifier": {
               "description": "Modifier for Data use permission. Preferable descendants of 'DUO:0000017 data use modifier'",
               "type": "string"
            },
            "permission": {
               "description": "Data use permission. Typically one or more terms from DUO. Preferably descendants of 'DUO:0000001 data use permission'.",
               "type": "string"
            }
         },
         "required": [],
         "title": "DataUseCondition",
         "type": "object"
      },
      "Dataset": {
         "additionalProperties": false,
         "description": "A Dataset is a collection of Files that is prepared for distribution and is tied to a Data Access Policy.",
         "properties": {
            "accession": {
               "description": "A unique GHGA identifier assigned to an entity for the sole purpose of referring to that entity in a global scope.",
               "type": "string"
            },
            "alias": {
               "description": "The alias for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "Description of an entity.",
               "type": "string"
            },
            "ega_accession": {
               "description": "A unique European Genome-Phenome Archive (EGA) identifier assigned to an entity for the sole purpose of referring to that entity within the EGA federated network.",
               "type": "string"
            },
            "has_analysis": {
               "description": "One or more Analysis entities that are referenced by this Dataset.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Study"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_data_access_policy": {
               "description": "The Data Access Policy that applies to this Dataset.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/DataAccessPolicy"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "has_experiment": {
               "description": "One or more Analysis entities that are referenced by this Dataset.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Analysis"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_file": {
               "description": "One or more File entities that collectively are part of this Dataset.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/File"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_publication": {
               "description": "One or more Publication entities associated with this Dataset.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Publication"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_sample": {
               "description": "One or more Sample entities that are referenced by this Dataset.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Study"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_study": {
               "description": "One or more Study entities that are referenced by this Dataset.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Study"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "release_date": {
               "description": "The timestamp (in ISO 8601 format) when the entity was released for public consumption.",
               "type": "string"
            },
            "release_status": {
               "$ref": "#/$defs/ReleaseStatusEnum",
               "description": "The release status of a Dataset."
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "title": {
               "description": "A title for the submitted Dataset.",
               "type": "string"
            },
            "type": {
               "description": "The type of an entity.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id",
            "title",
            "description",
            "type",
            "has_study",
            "has_sample",
            "has_file",
            "has_data_access_policy",
            "alias"
         ],
         "title": "Dataset",
         "type": "object"
      },
      "Disease": {
         "additionalProperties": false,
         "description": "A disease is a disposition to undergo pathological processes that exists in an organism because of one or more disorders in that organism.",
         "properties": {
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "The description or definition of an ontology class.",
               "type": "string"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "name": {
               "description": "The name or label (rdfs:label) of an ontology class.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "Disease",
         "type": "object"
      },
      "DiseaseOrPhenotypicFeature": {
         "additionalProperties": false,
         "description": "Disease or Phenotypic Feature that the entity is associated with. This entity is a union of Disease and Phenotypic Feature and exists to accommodate situations where Disease concepts are used interchangeably with Phenotype concepts or vice-versa.",
         "properties": {
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "The description or definition of an ontology class.",
               "type": "string"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "name": {
               "description": "The name or label (rdfs:label) of an ontology class.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "DiseaseOrPhenotypicFeature",
         "type": "object"
      },
      "Donor": {
         "additionalProperties": false,
         "description": "A Donor is an Individual that participates in a research Study by donating a Biospecimen. The use of the Biospecimen is restricted to the consent provided by the Donor.",
         "properties": {
            "accession": {
               "description": "A unique GHGA identifier assigned to an entity for the sole purpose of referring to that entity in a global scope.",
               "type": "string"
            },
            "additional_name": {
               "description": "Additional name(s).",
               "type": "string"
            },
            "age": {
               "description": "Age of an individual.",
               "type": "integer"
            },
            "alias": {
               "description": "The alias for an entity.",
               "type": "string"
            },
            "ancestry": {
               "description": "A person's descent or lineage, from a person or from a population. Typically this is a value from HANCESTRO (Human Ancestry Ontology).",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "ega_accession": {
               "description": "A unique European Genome-Phenome Archive (EGA) identifier assigned to an entity for the sole purpose of referring to that entity within the EGA federated network.",
               "type": "string"
            },
            "family_name": {
               "description": "Last name.",
               "type": "string"
            },
            "geographical_region": {
               "description": "The geographical region where the Individual is located. Any demarcated area of the Earth; may be determined by both natural and human boundaries.",
               "type": "string"
            },
            "given_name": {
               "description": "First name.",
               "type": "string"
            },
            "has_children": {
               "description": "One or more children for this Individual.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Individual"
                     },
                     {
                        "$ref": "#/$defs/Donor"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_disease": {
               "description": "The Disease entity that is associated with this Biospecimen at the time of retrieval from the organism. Typically, a concept from Mondo Disease Ontology. For example, 'MONDO:0003742' indicates that the Individual - from which the Biospecimen was extracted from - suffers from 'Heart Fibrosarcoma'.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Disease"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_parent": {
               "description": "One or more parent for this Individual.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Individual"
                     },
                     {
                        "$ref": "#/$defs/Donor"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_phenotypic_feature": {
               "description": "The Phenotypic Feature entity that is associated with this Biospecimen at the time of retrieval from the organism. Typically, a concept from Human Phenotype Ontology. For example, 'HP:0100244' indicates that the Individual - from which the Biospecimen was extracted from - exhibits 'Fibrosarcoma' as one of its phenotype.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/PhenotypicFeature"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "karyotype": {
               "description": "The karyotype of an individual if defined.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "sex": {
               "$ref": "#/$defs/BiologicalSexEnum",
               "description": "The assemblage of physical properties or qualities by which male is distinguished from female; the physical difference between male and female; the distinguishing peculiarity of male or female."
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "vital_status": {
               "$ref": "#/$defs/VitalStatusEnum",
               "description": "Last known Vital Status of an Individual."
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id",
            "sex",
            "age",
            "vital_status",
            "alias"
         ],
         "title": "Donor",
         "type": "object"
      },
      "Experiment": {
         "additionalProperties": false,
         "description": "An experiment is an investigation that consists of a coordinated set of actions and observations designed to generate data with the goal of verifying, falsifying, or establishing the validity of a hypothesis.",
         "properties": {
            "accession": {
               "description": "A unique GHGA identifier assigned to an entity for the sole purpose of referring to that entity in a global scope.",
               "type": "string"
            },
            "alias": {
               "description": "The alias for an entity.",
               "type": "string"
            },
            "biological_replicates": {
               "description": "A biological replicate is a replicate role that consists of independent biological replicates made from different individual biosamples.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "A detailed description of the Experiment.",
               "type": "string"
            },
            "ega_accession": {
               "description": "A unique European Genome-Phenome Archive (EGA) identifier assigned to an entity for the sole purpose of referring to that entity within the EGA federated network.",
               "type": "string"
            },
            "experimental_replicates": {
               "description": "The replicate number of the assay, i.e. the numeric iteration for the assay that was repeated.",
               "type": "string"
            },
            "has_experiment_process": {
               "description": "One or more Experiment Processes entities associated with this Experiment.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/ExperimentProcess"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_file": {
               "description": "One or more Files entities that are generated as output of this Experiment.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/File"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_protocol": {
               "description": "One or more Protocol entities associated with this Experiment.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Protocol"
                     },
                     {
                        "$ref": "#/$defs/LibraryPreparationProtocol"
                     },
                     {
                        "$ref": "#/$defs/SequencingProtocol"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_sample": {
               "description": "The Sample entity associated with this Experiment.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/Sample"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "has_study": {
               "description": "The Study entity associated with this Experiment.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/Study"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "technical_replicates": {
               "description": "A technical replicate is a replicate role where the same BioSample is use e.g. the same pool of RNA used to assess technical (as opposed to biological) variation within an experiment.",
               "type": "string"
            },
            "title": {
               "description": "Name for the experiment (eg: GHGAE_PBMC_RNAseq).",
               "type": "string"
            },
            "type": {
               "description": "The type of Experiment.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id",
            "type",
            "has_study",
            "has_sample",
            "has_protocol",
            "alias",
            "description"
         ],
         "title": "Experiment",
         "type": "object"
      },
      "ExperimentProcess": {
         "additionalProperties": false,
         "description": "An Experiment Process is a process that describes how a Sample is transformed to a File via an assay. The Experiment Process also keeps track of the Protocol used and the Agent that is running the experiment.",
         "properties": {
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "has_agent": {
               "description": "The Agent - a software, institution, or human - that is executing or responsible for executing the Experiment Process.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/Agent"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "has_input": {
               "description": "The input to the Experiment Process. Usually a Sample entity.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/Sample"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "has_output": {
               "description": "The output of this Experiment Process. Usually a File entity.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/File"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "has_protocol": {
               "description": "The Protocol entity used by this Experiment Process.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/Protocol"
                  },
                  {
                     "$ref": "#/$defs/LibraryPreparationProtocol"
                  },
                  {
                     "$ref": "#/$defs/SequencingProtocol"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "title": {
               "description": "A descriptive title that explains the step(s) involved in performing the experiment leading up to the sequencing of the sample and generation of raw data from the instrument. (eg: Sample extraction -> Target Enrichment)",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "ExperimentProcess",
         "type": "object"
      },
      "Family": {
         "additionalProperties": false,
         "description": "A domestic group, or a number of domestic groups linked through descent (demonstrated or stipulated) from a common ancestor, marriage, or adoption.",
         "properties": {
            "accession": {
               "description": "A unique GHGA identifier assigned to an entity for the sole purpose of referring to that entity in a global scope.",
               "type": "string"
            },
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "has_member": {
               "description": "One or more Individuals that collectively define this Family.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Individual"
                     },
                     {
                        "$ref": "#/$defs/Donor"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_proband": {
               "description": "The Individual that is reported to have a disorder which results in the Family being brought into a Study.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/Individual"
                  },
                  {
                     "$ref": "#/$defs/Donor"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "name": {
               "description": "The name for an entity.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "Family",
         "type": "object"
      },
      "File": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "accession": {
               "description": "A unique GHGA identifier assigned to an entity for the sole purpose of referring to that entity in a global scope.",
               "type": "string"
            },
            "alias": {
               "description": "The alias for an entity.",
               "type": "string"
            },
            "checksum": {
               "description": "A computed value which depends on the contents of a block of data and which is transmitted or stored along with the data in order to detect corruption of the data. The receiving system recomputes the checksum based upon the received data and compares this value with the one sent with the data. If the two values are the same, the receiver has some confidence that the data was received correctly.",
               "type": "string"
            },
            "checksum_type": {
               "description": "The type of algorithm used to generate the checksum of a file.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "ega_accession": {
               "description": "A unique European Genome-Phenome Archive (EGA) identifier assigned to an entity for the sole purpose of referring to that entity within the EGA federated network.",
               "type": "string"
            },
            "format": {
               "$ref": "#/$defs/FileFormatEnum",
               "description": "The format of the file: BAM, SAM, CRAM, BAI, etc."
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "name": {
               "description": "The given filename.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "size": {
               "description": "The size of a file in bytes.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id",
            "name",
            "format",
            "checksum",
            "checksum_type",
            "alias"
         ],
         "title": "File",
         "type": "object"
      },
      "FileFormatEnum": {
         "description": "Enum to capture file types.",
         "enum": [
            "bam",
            "complete_genomics",
            "cram",
            "fasta",
            "fastq",
            "pacbio_hdf5",
            "sff",
            "srf",
            "vcf"
         ],
         "title": "FileFormatEnum",
         "type": "string"
      },
      "Individual": {
         "additionalProperties": false,
         "description": "An Individual is a Person who is participating in a Study.",
         "properties": {
            "accession": {
               "description": "A unique GHGA identifier assigned to an entity for the sole purpose of referring to that entity in a global scope.",
               "type": "string"
            },
            "additional_name": {
               "description": "Additional name(s).",
               "type": "string"
            },
            "age": {
               "description": "Age of an individual.",
               "type": "integer"
            },
            "alias": {
               "description": "The alias for an entity.",
               "type": "string"
            },
            "ancestry": {
               "description": "A person's descent or lineage, from a person or from a population. Typically this is a value from HANCESTRO (Human Ancestry Ontology).",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "ega_accession": {
               "description": "A unique European Genome-Phenome Archive (EGA) identifier assigned to an entity for the sole purpose of referring to that entity within the EGA federated network.",
               "type": "string"
            },
            "family_name": {
               "description": "Last name.",
               "type": "string"
            },
            "geographical_region": {
               "description": "The geographical region where the Individual is located. Any demarcated area of the Earth; may be determined by both natural and human boundaries.",
               "type": "string"
            },
            "given_name": {
               "description": "First name.",
               "type": "string"
            },
            "has_children": {
               "description": "One or more children for this Individual.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Individual"
                     },
                     {
                        "$ref": "#/$defs/Donor"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_disease": {
               "description": "The Disease entity that is associated with this Biospecimen at the time of retrieval from the organism. Typically, a concept from Mondo Disease Ontology. For example, 'MONDO:0003742' indicates that the Individual - from which the Biospecimen was extracted from - suffers from 'Heart Fibrosarcoma'.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Disease"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_parent": {
               "description": "One or more parent for this Individual.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Individual"
                     },
                     {
                        "$ref": "#/$defs/Donor"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_phenotypic_feature": {
               "description": "The Phenotypic Feature entity that is associated with this Biospecimen at the time of retrieval from the organism. Typically, a concept from Human Phenotype Ontology. For example, 'HP:0100244' indicates that the Individual - from which the Biospecimen was extracted from - exhibits 'Fibrosarcoma' as one of its phenotype.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/PhenotypicFeature"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "karyotype": {
               "description": "The karyotype of an individual if defined.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "sex": {
               "$ref": "#/$defs/BiologicalSexEnum",
               "description": "The assemblage of physical properties or qualities by which male is distinguished from female; the physical difference between male and female; the distinguishing peculiarity of male or female."
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "vital_status": {
               "$ref": "#/$defs/VitalStatusEnum",
               "description": "Last known Vital Status of an Individual."
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id",
            "sex",
            "age",
            "vital_status",
            "alias"
         ],
         "title": "Individual",
         "type": "object"
      },
      "LibraryPreparationProtocol": {
         "additionalProperties": false,
         "description": "Information about the library preparation of an Experiment.",
         "properties": {
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "Description about how a sequencing library was prepared (eg: Library construction method).",
               "type": "string"
            },
            "end_bias": {
               "description": "The end of the cDNA molecule that is preferentially sequenced, e.g. 3/5 prime tag or end, or the full-length transcript.",
               "type": "string"
            },
            "has_attribute": {
               "description": "One or more attributes that further characterizes this Library Preparation Protocol.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Attribute"
                     }
                  ]
               },
               "type": "array"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "library_layout": {
               "description": "Describe whether the library was sequenced in single-end (forward or reverse) or paired-end mode",
               "type": "string"
            },
            "library_name": {
               "description": "A short name identifying the library to potential users. The same name may refer to multiple versions of the same continually updated library.",
               "type": "string"
            },
            "library_preparation": {
               "description": "The general method for sequencing library preparation (e.g. KAPA PCR-free).",
               "type": "string"
            },
            "library_preparation_kit_manufacturer": {
               "description": "Manufacturer of library preparation kit",
               "type": "string"
            },
            "library_preparation_kit_retail_name": {
               "description": "A unique identifier for the kit used to construct a genomic library. This may include the vendor name, kit name and kit version  (e.g. Agilent sure select Human Exome V8, Twist RefSeq Exome, etc.)",
               "type": "string"
            },
            "library_selection": {
               "description": "Whether any method was used to select for or against, enrich, or screen the material being sequenced. Library Selection method (e.g. random, PCA, cDNA, etc )",
               "type": "string"
            },
            "library_type": {
               "description": "Describe the level of omics analysis (eg: Metagenome, transcriptome, etc)",
               "type": "string"
            },
            "name": {
               "description": "Name of the protocol (eg: Sample extraction_PCR amplification).",
               "type": "string"
            },
            "primer": {
               "description": "The type of primer used for reverse transcription, e.g. 'oligo-dT' or 'random' primer. This allows users to identify content of the cDNA library input e.g. enriched for mRNA.",
               "type": "string"
            },
            "rnaseq_strandedness": {
               "description": "The strandedness of the library, whether reads come from both strands of the cDNA or only from the first (antisense) or the second (sense) strand.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "target_regions": {
               "description": "Subset of genes or specific regions of the genome, which are most likely to be involved in the phenotype under study.",
               "type": "string"
            },
            "type": {
               "description": "Type of the protocol (eg: Target enrichment).",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "url": {
               "description": "URL for the resource that describes this Protocol.",
               "type": "string"
            },
            "xref": {
               "description": "One or more cross-references for this Protocol.  (Eg: manufacturer protocol, protocol from publication etc )",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id",
            "library_name",
            "library_layout",
            "library_type",
            "library_selection",
            "library_preparation",
            "library_preparation_kit_retail_name",
            "library_preparation_kit_manufacturer",
            "target_regions",
            "description"
         ],
         "title": "LibraryPreparationProtocol",
         "type": "object"
      },
      "Member": {
         "additionalProperties": false,
         "description": "Member of an Organization or a Committee.",
         "properties": {
            "additional_name": {
               "description": "Additional name(s).",
               "type": "string"
            },
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "email": {
               "description": "The email of the Member.",
               "type": "string"
            },
            "family_name": {
               "description": "Last name.",
               "type": "string"
            },
            "given_name": {
               "description": "First name.",
               "type": "string"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "organization": {
               "description": "The organization that the Member is part of.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "telephone": {
               "description": "The telephone number of the Member.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id",
            "email",
            "organization"
         ],
         "title": "Member",
         "type": "object"
      },
      "PhenotypicFeature": {
         "additionalProperties": false,
         "description": "The observable form taken by some character (or group of characters) in an individual or an organism, excluding pathology and disease. The detectable outward manifestations of a specific genotype.",
         "properties": {
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "The description or definition of an ontology class.",
               "type": "string"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "name": {
               "description": "The name or label (rdfs:label) of an ontology class.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "PhenotypicFeature",
         "type": "object"
      },
      "Project": {
         "additionalProperties": false,
         "description": "Any specifically defined piece of work that is undertaken or attempted to meet a single requirement.",
         "properties": {
            "accession": {
               "description": "A unique GHGA identifier assigned to an entity for the sole purpose of referring to that entity in a global scope.",
               "type": "string"
            },
            "alias": {
               "description": "The alias for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "Short textual description of the project (Some information on the protocol, sample used and collected etc)",
               "type": "string"
            },
            "has_attribute": {
               "description": "Custom attributes for the Project  (eg: Cancer - Colon cancer, prostrate cancer, blood cancer etc)",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Attribute"
                     }
                  ]
               },
               "type": "array"
            },
            "has_publication": {
               "description": "One or more Publication entities associated with this Project.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Publication"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "title": {
               "description": "Comprehensive title for the project.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id",
            "alias",
            "title",
            "description"
         ],
         "title": "Project",
         "type": "object"
      },
      "Protocol": {
         "additionalProperties": false,
         "description": "A plan specification which has sufficient level of detail and quantitative information to communicate it between investigation agents, so that different investigation agents will reliably be able to independently reproduce the process.",
         "properties": {
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "Detailed description of the Protocol.",
               "type": "string"
            },
            "has_attribute": {
               "description": "One or more attributes that further characterizes this Protocol.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Attribute"
                     }
                  ]
               },
               "type": "array"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "name": {
               "description": "Name of the protocol (eg: Sample extraction_PCR amplification).",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "type": {
               "description": "Type of the protocol (eg: Target enrichment).",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "url": {
               "description": "URL for the resource that describes this Protocol.",
               "type": "string"
            },
            "xref": {
               "description": "One or more cross-references for this Protocol.  (Eg: manufacturer protocol, protocol from publication etc )",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "Protocol",
         "type": "object"
      },
      "Publication": {
         "additionalProperties": false,
         "description": "The Publication entity represents a publication. While a publication can be any article that is published, the minimum expectation is that the publication has a valid DOI.",
         "properties": {
            "abstract": {
               "description": "The study abstract that describes the goals. Can also hold abstract from a publication related to this study.",
               "type": "string"
            },
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "id": {
               "description": "A PMID or DOI for the Publication.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "title": {
               "description": "The title for the Publication.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "One or more cross-references for this Publication.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "Publication",
         "type": "object"
      },
      "ReleaseStatusEnum": {
         "description": "Enum to capture the release status of an entity.",
         "enum": [
            "unreleased",
            "released"
         ],
         "title": "ReleaseStatusEnum",
         "type": "string"
      },
      "Sample": {
         "additionalProperties": false,
         "description": "A sample is a limited quantity of something to be used for testing, analysis, inspection, investigation, demonstration, or trial use. A sample is prepared from a Biospecimen (isolate or tissue).",
         "properties": {
            "accession": {
               "description": "A unique GHGA identifier assigned to an entity for the sole purpose of referring to that entity in a global scope.",
               "type": "string"
            },
            "alias": {
               "description": "The alias for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "Short textual description of the sample (How the sample was collected, sample source, protocol followed for processing the sample etc).",
               "type": "string"
            },
            "ega_accession": {
               "description": "A unique European Genome-Phenome Archive (EGA) identifier assigned to an entity for the sole purpose of referring to that entity within the EGA federated network.",
               "type": "string"
            },
            "has_anatomical_entity": {
               "description": "Anatomical site associated with an entity.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/AnatomicalEntity"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "has_attribute": {
               "description": "Key/value pairs corresponding to an entity.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Attribute"
                     }
                  ]
               },
               "type": "array"
            },
            "has_biospecimen": {
               "description": "The Biospecimen from which this Sample was prepared from.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/Biospecimen"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "has_individual": {
               "description": "The Individual from which this Sample was derived from.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/Individual"
                  },
                  {
                     "$ref": "#/$defs/Donor"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "isolation": {
               "description": "Method or device employed for collecting/isolating a biospecimen or a sample.",
               "type": "string"
            },
            "name": {
               "description": "Name of the sample (eg:GHGAS_Blood_Sample1 or GHGAS_PBMC_RNAseq_S1).",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "storage": {
               "description": "Methods by which a biospecimen or a sample is stored (e.g. frozen in liquid nitrogen).",
               "type": "string"
            },
            "tissue": {
               "description": "An anatomical structure consisting of similarly specialized cells and intercellular matrix, aggregated according to genetically determined spatial relationships, performing a specific function.",
               "type": "string"
            },
            "type": {
               "$ref": "#/$defs/CaseControlEnum",
               "description": "Type of sample: 'Case' or 'Control'."
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "vital_status_at_sampling": {
               "description": "Vital Status of an Individual at the point of sampling (eg:'Alive', 'Deceased').",
               "type": "string"
            },
            "xref": {
               "description": "One or more cross-references for this Sample. For example, this Sample may have an EBI BioSamples accession or an EGA Sample accession.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id",
            "name",
            "description",
            "has_individual",
            "alias",
            "tissue"
         ],
         "title": "Sample",
         "type": "object"
      },
      "SequencingProtocol": {
         "additionalProperties": false,
         "description": "Information about the sequencing of a sample.",
         "properties": {
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "cell_barcode_offset": {
               "description": "The offset in sequence of the cell identifying barcode. (Eg. '0').",
               "type": "string"
            },
            "cell_barcode_read": {
               "description": "The type of read that contains the cell barcode (eg: index1/index2/read1/read2).",
               "type": "string"
            },
            "cell_barcode_size": {
               "description": "The size of the cell identifying barcode (E.g. '16').",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "Description about the sequencing protocol (eg: mRNA-seq,Whole exome long-read sequencing etc).",
               "type": "string"
            },
            "flow_cell_id": {
               "description": "Flow Cell ID (eg: Experiment ID_Cell 1_Lane_1). The barcode assigned to a flow cell used in nucleotide sequencing.",
               "type": "string"
            },
            "flow_cell_type": {
               "description": "Type of flow cell used (e.g. S4, S2 for NovaSeq; PromethION, Flongle for Nanopore). Aparatus in the fluidic subsystem where the sheath and sample meet. Can be one of several types; jet-in-air, quartz cuvette, or a hybrid of the two. The sample flows through the center of a fluid column of sheath fluid in the flow cell.",
               "type": "string"
            },
            "has_attribute": {
               "description": "One or more attributes that further characterizes this Sequencing Protocol.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Attribute"
                     }
                  ]
               },
               "type": "array"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "index_sequence": {
               "description": "A unique nucleotide sequence that is added to a sample during library preparation to serve as a unique identifier for the sample.",
               "type": "string"
            },
            "instrument_model": {
               "description": "The name and model of the technology platform used to perform sequencing.",
               "type": "string"
            },
            "lane_number": {
               "description": "The numerical identifier for the lane or machine unit where a sample was located during nucleotide sequencing.",
               "type": "string"
            },
            "name": {
               "description": "Name of the protocol (eg: Sample extraction_PCR amplification).",
               "type": "string"
            },
            "paired_or_single_end": {
               "description": "Denotes whether a submitted FASTQ file contains forward (R1) or reverse (R2) reads for paired-end sequencing. The number that identifies each read direction in a paired-end nucleotide sequencing replications.",
               "type": "string"
            },
            "sample_barcode_read": {
               "description": "The type of read that contains the sample barcode (eg: index1/index2/read1/read2).",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "sequencing_center": {
               "description": "Center where sample was sequenced.",
               "type": "string"
            },
            "sequencing_read_length": {
               "description": "Length of sequencing reads (eg: Long or short or actual number of the read length etc). The number of nucleotides successfully ordered from each side of a nucleic acid fragment obtained after the completion of a sequencing process",
               "type": "string"
            },
            "target_coverage": {
               "description": "Mean coverage for whole genome sequencing, or mean target coverage for whole exome and targeted sequencing. The number of times a particular locus (site, nucleotide, amplicon, region) was sequenced.",
               "type": "string"
            },
            "type": {
               "description": "Name of the library preparation protocol (eg: mRNA-seq,Whole exome long-read sequencing etc).",
               "type": "string"
            },
            "umi_barcode_offset": {
               "description": "The offset in sequence of the UMI identifying barcode. (E.g. '16').",
               "type": "string"
            },
            "umi_barcode_read": {
               "description": "The type of read that contains the UMI barcode (Eg: index1/index2/read1/read2).",
               "type": "string"
            },
            "umi_barcode_size": {
               "description": "The size of the UMI identifying barcode (Eg. '10').",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "url": {
               "description": "URL for the resource that describes this Protocol.",
               "type": "string"
            },
            "xref": {
               "description": "One or more cross-references for this Protocol.  (Eg: manufacturer protocol, protocol from publication etc )",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id",
            "instrument_model",
            "description"
         ],
         "title": "SequencingProtocol",
         "type": "object"
      },
      "Study": {
         "additionalProperties": false,
         "description": "Studies are experimental investigations of a particular phenomenon. It involves a detailed examination and analysis of a subject to learn more about the phenomenon being studied.",
         "properties": {
            "accession": {
               "description": "A unique GHGA identifier assigned to an entity for the sole purpose of referring to that entity in a global scope.",
               "type": "string"
            },
            "affiliation": {
               "description": "Institutions associated with this study.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "alias": {
               "description": "The alias for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "description": {
               "description": "A detailed description (abstract) that describes the goals of this Study.",
               "type": "string"
            },
            "ega_accession": {
               "description": "A unique European Genome-Phenome Archive (EGA) identifier assigned to an entity for the sole purpose of referring to that entity within the EGA federated network.",
               "type": "string"
            },
            "has_analysis": {
               "description": "One or more Analysis entities associated with this Study.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Analysis"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_attribute": {
               "description": "Custom key/value pairs that further characterizes the Study. (e.g.: approaches - single-cell, bulk etc)",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Attribute"
                     }
                  ]
               },
               "type": "array"
            },
            "has_experiment": {
               "description": "One or more Experiment entities associated with this Study.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Experiment"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_project": {
               "description": "The project associated with this Study.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/Project"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "has_publication": {
               "description": "One or more Publication entities associated with this Study.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Publication"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "release_date": {
               "description": "The timestamp (in ISO 8601 format) when the entity was released for public consumption.",
               "type": "string"
            },
            "release_status": {
               "$ref": "#/$defs/ReleaseStatusEnum",
               "description": "The release status of a Study."
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "title": {
               "description": "A comprehensive title for the study.",
               "type": "string"
            },
            "type": {
               "$ref": "#/$defs/StudyTypeEnum",
               "description": "The type of Study. For example, 'Cancer Genomics', 'Epigenetics', 'Exome Sequencing'."
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id",
            "type",
            "affiliation",
            "alias",
            "title",
            "description"
         ],
         "title": "Study",
         "type": "object"
      },
      "StudyTypeEnum": {
         "description": "Enum to capture the type of a study.",
         "enum": [
            "whole_genome_sequencing",
            "metagenomics",
            "transcriptome_analysis",
            "resequencing",
            "epigenetics",
            "synthetic_genomics",
            "forensic_paleo_genomics",
            "gene_regulation",
            "cancer_genomics",
            "population_genomics",
            "rna_seq",
            "exome_sequencing",
            "pooled_clone_sequencing",
            "other"
         ],
         "title": "StudyTypeEnum",
         "type": "string"
      },
      "Submission": {
         "additionalProperties": false,
         "description": "A grouping entity that represents information about one or more entities. A submission can be considered as a set of inter-related (and inter-connected) entities that represent a data submission to GHGA.",
         "properties": {
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the Submission was created.",
               "type": "string"
            },
            "has_analysis": {
               "description": "Information about one or more Analysis entities associated with this submission.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Analysis"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_biospecimen": {
               "description": "Information about one or more Biospecimen entities associated with this submission.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Biospecimen"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_data_access_policy": {
               "description": "The Data Access Policy entity that applies to the data associated with this submission.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/DataAccessPolicy"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "has_experiment": {
               "description": "Information about one or more Experiment entities associated with this submission.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Experiment"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_file": {
               "description": "Information about one or more File entities associated with this submission.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/File"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_individual": {
               "description": "Information about one or more Individual entities associated with this submission.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Individual"
                     },
                     {
                        "$ref": "#/$defs/Donor"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_project": {
               "description": "Information about a Project entity associated with this submission.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/Project"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "has_sample": {
               "description": "Information about one or more Sample entities associated with this submission.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Sample"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "has_study": {
               "description": "Information about a Study entities associated with this submission.",
               "oneOf": [
                  {
                     "$ref": "#/$defs/Study"
                  },
                  {
                     "type": "string"
                  }
               ]
            },
            "id": {
               "description": "A internal unique identifier for the Submission.",
               "type": "string"
            },
            "submission_date": {
               "description": "The timestamp (in ISO 8601 format) when submission was marked completed.",
               "type": "string"
            },
            "submission_status": {
               "$ref": "#/$defs/SubmissionStatusEnum",
               "description": "The status of a Submission."
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the Submission was updated.",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "Submission",
         "type": "object"
      },
      "SubmissionStatusEnum": {
         "description": "Enum to capture the status of a Submission.",
         "enum": [
            "in progress",
            "completed"
         ],
         "title": "SubmissionStatusEnum",
         "type": "string"
      },
      "Technology": {
         "additionalProperties": false,
         "description": "A Technology is an abstraction that represents the instrument used for an assay. The Technology entity captures instrument-specific attributes that are relevant for an Experiment entity. The Technology entity may be further characterized by its children where each child has fields that are relevant to that particular technology.",
         "properties": {
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "Technology",
         "type": "object"
      },
      "User": {
         "additionalProperties": false,
         "description": "A user in GHGA.",
         "properties": {
            "additional_name": {
               "description": "Additional name(s).",
               "type": "string"
            },
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "email": {
               "description": "Email of a person.",
               "type": "string"
            },
            "family_name": {
               "description": "Last name.",
               "type": "string"
            },
            "given_name": {
               "description": "First name.",
               "type": "string"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "role": {
               "$ref": "#/$defs/UserRoleEnum",
               "description": "The role of the user"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "User",
         "type": "object"
      },
      "UserRoleEnum": {
         "description": "Enum to capture the different roles a GHGA User can have.",
         "enum": [
            "data requester",
            "data steward"
         ],
         "title": "UserRoleEnum",
         "type": "string"
      },
      "VitalStatusEnum": {
         "description": "Enum to capture the vital status of an individual.",
         "enum": [
            "alive",
            "deceased",
            "unknown"
         ],
         "title": "VitalStatusEnum",
         "type": "string"
      },
      "Workflow": {
         "additionalProperties": false,
         "description": "A Workflow is an abstraction that represents the workflow used to perform an analysis. The Workflow entity captures workflow-specific attributes that are relevant for an Analysis entity. The Workflow entity may be further characterized by its children where each child has fields that are relevant to that particular workflow.",
         "properties": {
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "Workflow",
         "type": "object"
      },
      "WorkflowParameter": {
         "additionalProperties": false,
         "description": "A key/value pair that represents a parameter used in a Workflow Step.",
         "properties": {
            "key": {
               "description": "Key that represents the parameter name.",
               "type": "string"
            },
            "value": {
               "description": "Value corresponding to the the parameter key.",
               "type": "string"
            }
         },
         "required": [],
         "title": "WorkflowParameter",
         "type": "object"
      },
      "WorkflowStep": {
         "additionalProperties": false,
         "description": "A Workflow Step represents each individual step performed in a Workflow. If the Workflow is a single-step workflow then the Workflow has just one Workflow Step entity. If the Workflow is a multi-step workflow then the Workflow has a Workflow Step entity for each step. All Workflow step specific attributes like parameters, and metadata about execution environment are captured by the Workflow Step entity.",
         "properties": {
            "alias": {
               "description": "The alias (alternate identifier) for an entity.",
               "type": "string"
            },
            "creation_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was created.",
               "type": "string"
            },
            "has_workflow_parameter": {
               "description": "One or more parameters that are associated with this Workflow Step.",
               "items": {
                  "oneOf": [
                     {
                        "$ref": "#/$defs/WorkflowParameter"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "type": "array"
            },
            "id": {
               "description": "The internal unique identifier for an entity.",
               "type": "string"
            },
            "schema_type": {
               "description": "The schema type an instance corresponds to.",
               "type": "string"
            },
            "schema_version": {
               "description": "The version of the schema an instance corresponds to.",
               "type": "string"
            },
            "update_date": {
               "description": "Timestamp (in ISO 8601 format) when the entity was updated.",
               "type": "string"
            },
            "xref": {
               "description": "Holds one or more database cross references for an entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "WorkflowStep",
         "type": "object"
      }
   },
   "$id": "https://w3id.org/GHGA-Metadata-Schema",
   "$schema": "http://json-schema.org/draft-07/schema#",
   "additionalProperties": true,
   "metamodel_version": "1.7.0",
   "properties": {},
   "required": [],
   "title": "GHGA-Metadata-Schema",
   "type": "object",
   "version": "0.5.0"
}

